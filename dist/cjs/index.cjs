"use strict";var e=require("mixme");function r(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var t=r(require("toposort"));class n extends Error{code;constructor(e,r,...t){Array.isArray(r)&&(r=r.filter((function(e){return!!e})).join(" ")),super(r=`${e}: ${r}`),Error.captureStackTrace&&Error.captureStackTrace(this,n),this.code=e;for(let e=0;e<t.length;e++){const r=t[e];for(const e in r){if("code"===e)continue;const t=r[e];void 0!==t&&(this[e]=Buffer.isBuffer(t)?t.toString():null===t?t:JSON.parse(JSON.stringify(t)))}}}}var o=function(...e){return new n(...e)};const i=function(r,t){return(Array.isArray(t)?t:[t]).map((function(t){if("function"!=typeof t&&!e.is_object(t))throw o("PLUGINS_HOOK_INVALID_HANDLER",["no hook handler function could be found,","a hook must be defined as a function","or as an object with an handler property,",`got ${JSON.stringify(t)} instead.`]);return{after:"function"!=typeof t&&t.after?"string"==typeof t.after?[t.after]:t.after:[],name:r,before:"function"!=typeof t&&t.before?"string"==typeof t.before?[t.before]:t.before:[],handler:"function"==typeof t?t:t.handler}}))},a={PLUGINS_HOOK_AFTER_INVALID:function({name:e,plugin:r,after:t}){throw o("PLUGINS_HOOK_AFTER_INVALID",[`the hook ${JSON.stringify(e)}`,r?`in plugin ${JSON.stringify(r)}`:"","references an after dependency",`in plugin ${JSON.stringify(t)} which does not exists.`])},PLUGINS_HOOK_BEFORE_INVALID:function({name:e,plugin:r,before:t}){throw o("PLUGINS_HOOK_BEFORE_INVALID",[`the hook ${JSON.stringify(e)}`,r?`in plugin ${JSON.stringify(r)}`:"","references a before dependency",`in plugin ${JSON.stringify(t)} which does not exists.`])},REQUIRED_PLUGIN:function({plugin:e,require:r}){throw o("REQUIRED_PLUGIN",[`the plugin ${JSON.stringify(e)}`,"requires a plugin",`named ${JSON.stringify(r)} which is not unregistered.`])},PLUGINS_REGISTER_INVALID_REQUIRE:function({name:e,require:r}){throw o("PLUGINS_REGISTER_INVALID_REQUIRE",["the `require` property",e?`in plugin ${JSON.stringify(e)}`:"","must be a string or an array,",`got ${JSON.stringify(r)}.`])}};exports.PlugableError=n,exports.plugandplay=function({args:r=[],chain:n,parent:s,plugins:u=[]}={}){const f=[],c={register:function(t){if("function"!=typeof t&&!e.is_object_literal(t))throw o("PLUGINS_REGISTER_INVALID_ARGUMENT",["a plugin must be an object literal or a function returning an object literal","with keys such as `name`, `required` and `hooks`,",`got ${JSON.stringify(t)} instead.`]);t="function"==typeof t?t(...r):t;const s={};for(const e in t.hooks)t.hooks[e]&&(s[e]=i(e,t.hooks[e]));t.require&&!Array.isArray(t.require)&&(t.require=[t.require]);const u={hooks:s,require:(t.require?Array.isArray(t.require)?t.require:[t.require]:[]).map((e=>{if("string"!=typeof e)throw a.PLUGINS_REGISTER_INVALID_REQUIRE({name:t.name,require:e});return e})),name:t.name};return f.push(u),n??this},registered:function(e){for(const r of f)if(r.name===e)return!0;return!(null==s||!s.registered(e))},get:function({name:e,hooks:r=[],sort:n=!0}){const o=[...i(e,r),...f.map((function(r){if(r.hooks[e]){for(const e of r.require)if(!c.registered(e))throw a.REQUIRED_PLUGIN({plugin:r.name,require:e});return r.hooks[e]?.map((e=>({plugin:r.name,require:r.require,...e})))}})).filter((function(e){return void 0!==e})).flat(1),...s?s.get({name:e,sort:!1}):[]];if(!n)return o;const u={};for(const e of o)e.plugin&&(u[e.plugin]=e);const l=[...o.map((function(r){return r.after.reduce((function(t,n){if(u[n])t.push([u[n],r]);else if(c.registered(n))throw a.PLUGINS_HOOK_AFTER_INVALID({name:e,plugin:r.plugin,after:n});return t}),[])})),...o.map((function(r){return r.before.reduce((function(t,n){if(u[n])t.push([r,u[n]]);else if(c.registered(n))throw a.PLUGINS_HOOK_BEFORE_INVALID({name:e,plugin:r.plugin,before:n});return t}),[])}))].flat(1);return t.array(o,l)},call:async function({args:r,handler:t,hooks:n=[],name:i}){if(1!==arguments.length)throw o("PLUGINS_INVALID_ARGUMENTS_NUMBER",["function `call` expect 1 object argument,",`got ${arguments.length} arguments.`]);if(!e.is_object_literal(arguments[0]))throw o("PLUGINS_INVALID_ARGUMENT_PROPERTIES",["function `call` expect argument to be a literal object","with the properties `name`, `args`, `hooks` and `handler`,",`got ${JSON.stringify(arguments[0])} arguments.`]);if("string"!=typeof i)throw o("PLUGINS_INVALID_ARGUMENT_NAME",["function `call` requires a property `name` in its first argument,",`got ${JSON.stringify(arguments[0])} argument.`]);const a=this.get({hooks:n,name:i});t=t||(()=>{});for(const e of a)switch(e.handler.length){case 0:case 1:await e.handler(r,(()=>{}));break;case 2:const n=await e.handler(r,t);if(null===n)return null;t=n;break;default:throw o("PLUGINS_INVALID_HOOK_HANDLER",["hook handlers must have 0 to 2 arguments",`got ${e.handler.length}`])}return t?t(r,(()=>{})):void 0},call_sync:function({args:r,handler:t,hooks:n=[],name:i}){if(1!==arguments.length)throw o("PLUGINS_INVALID_ARGUMENTS_NUMBER",["function `call` expect 1 object argument,",`got ${arguments.length} arguments.`]);if(!e.is_object_literal(arguments[0]))throw o("PLUGINS_INVALID_ARGUMENT_PROPERTIES",["function `call` expect argument to be a literal object","with the properties `name`, `args`, `hooks` and `handler`,",`got ${JSON.stringify(arguments[0])} arguments.`]);if("string"!=typeof i)throw o("PLUGINS_INVALID_ARGUMENT_NAME",["function `call` requires a property `name` in its first argument,",`got ${JSON.stringify(arguments[0])} argument.`]);const a=this.get({hooks:n,name:i});t=t||(()=>{});for(const e of a)switch(e.handler.length){case 0:case 1:e.handler(r,(()=>{}));break;case 2:const n=e.handler(r,t);if(null===n)return null;t=n;break;default:throw o("PLUGINS_INVALID_HOOK_HANDLER",["hook handlers must have 0 to 2 arguments",`got ${e.handler.length}`])}return t?t(r,(()=>{})):void 0}};for(const e of u)c.register(e);return c};
//# sourceMappingURL=index.cjs.map
